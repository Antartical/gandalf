{
    "swagger": "2.0",
    "info": {
        "description": "Oauth2 server.",
        "title": "Gandalf API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:9100",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Logs an user into the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Login admin",
                "operationId": "auth-login",
                "parameters": [
                    {
                        "description": "Logs into the system with the given credentials",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/validators.Credentials"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/serializers.TokensSerializer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPError"
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "description": "Refresh the given access token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Refresh",
                "operationId": "auth-refresh",
                "parameters": [
                    {
                        "description": "Refresh the given access token with the refresh one",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/validators.AuthTokens"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/serializers.TokensSerializer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPError"
                        }
                    }
                }
            }
        },
        "/notifications/emails/reset-password": {
            "post": {
                "description": "Sends reset password email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notification"
                ],
                "summary": "Sends reset password email",
                "operationId": "notifications-emails-reset-password",
                "parameters": [
                    {
                        "description": "resend the reset password email",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/validators.UserResendEmail"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPError"
                        }
                    }
                }
            }
        },
        "/notifications/emails/verify": {
            "post": {
                "description": "Sends verification email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notification"
                ],
                "summary": "Sends verification email",
                "operationId": "notifications-emails-verification",
                "parameters": [
                    {
                        "description": "sends the verification email",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/validators.UserResendEmail"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPError"
                        }
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "description": "ping the system to healthcare purposes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Health"
                ],
                "summary": "Ping",
                "operationId": "ping",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.pong"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPError"
                        }
                    }
                }
            }
        },
        "/users": {
            "post": {
                "description": "Creates a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Create User",
                "operationId": "user-create",
                "parameters": [
                    {
                        "description": "Creates a new user",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/validators.UserCreateData"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/serializers.UserSerializer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPError"
                        }
                    }
                }
            }
        },
        "/users/me": {
            "get": {
                "description": "get the user who performs the request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get me",
                "operationId": "user-read-me",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/serializers.UserSerializer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "deletes the user who perform the request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Delete me",
                "operationId": "user-delete-me",
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPError"
                        }
                    }
                }
            },
            "patch": {
                "description": "updates an user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update user",
                "operationId": "user-update",
                "parameters": [
                    {
                        "description": "Updates the user with the given data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/validators.AppCreateData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/serializers.UserSerializer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPError"
                        }
                    }
                }
            }
        },
        "/users/me/reset-password": {
            "post": {
                "description": "Reset user password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Reset user password",
                "operationId": "user-reset-password",
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPError"
                        }
                    }
                }
            }
        },
        "/users/me/verify": {
            "post": {
                "description": "Verify an user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Verify user",
                "operationId": "user-verify",
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPError"
                        }
                    }
                }
            }
        },
        "/users/{uuid}": {
            "get": {
                "description": "get an user by his uuid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user",
                "operationId": "user-read-uuid",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User uuid",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/serializers.UserSerializer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.pong": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string",
                    "example": "pong"
                }
            }
        },
        "helpers.HTTPError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "error": {
                    "type": "string",
                    "example": "status bad request"
                }
            }
        },
        "serializers.TokensSerializer": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/serializers.tokenDataSerializer"
                },
                "type": {
                    "type": "string",
                    "example": "tokens"
                }
            }
        },
        "serializers.UserSerializer": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/serializers.userDataSerializer"
                },
                "type": {
                    "type": "string",
                    "example": "user"
                }
            }
        },
        "serializers.tokenDataSerializer": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9"
                },
                "refresh_token": {
                    "type": "string",
                    "example": "kpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyf"
                }
            }
        },
        "serializers.userDataSerializer": {
            "type": "object",
            "properties": {
                "birthday": {
                    "type": "string",
                    "example": "1997-12-21"
                },
                "email": {
                    "type": "string",
                    "example": "test@test.com"
                },
                "name": {
                    "type": "string",
                    "example": "John"
                },
                "phone": {
                    "type": "string",
                    "example": "+34666123456"
                },
                "surname": {
                    "type": "string",
                    "example": "Doe"
                },
                "uuid": {
                    "type": "string",
                    "example": "4722679b-5a48-4e85-9084-605e8df610f4"
                }
            }
        },
        "validators.AppCreateData": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "icon_url": {
                    "type": "string",
                    "example": "http://youriconurl.dev"
                },
                "name": {
                    "type": "string",
                    "example": "MySuperApp"
                },
                "redirect_urls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "http://yourredirecturl.dev"
                    ]
                }
            }
        },
        "validators.AuthTokens": {
            "type": "object",
            "required": [
                "access_token",
                "refresh_token"
            ],
            "properties": {
                "access_token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9"
                },
                "refresh_token": {
                    "type": "string",
                    "example": "kpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyf"
                }
            }
        },
        "validators.Credentials": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "johndoe@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "My@appPassw0rd"
                }
            }
        },
        "validators.UserCreateData": {
            "type": "object",
            "required": [
                "birthday",
                "email",
                "name",
                "password",
                "surname"
            ],
            "properties": {
                "birthday": {
                    "type": "string",
                    "example": "1997-12-21"
                },
                "email": {
                    "type": "string",
                    "example": "johndoe@example.com"
                },
                "name": {
                    "type": "string",
                    "example": "John"
                },
                "password": {
                    "type": "string",
                    "example": "My@appPassw0rd"
                },
                "phone": {
                    "type": "string",
                    "example": "+34666123456"
                },
                "surname": {
                    "type": "string",
                    "example": "Doe"
                }
            }
        },
        "validators.UserResendEmail": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "johndoe@example.com"
                }
            }
        }
    },
    "securityDefinitions": {
        "OAuth2Password": {
            "type": "oauth2",
            "flow": "password",
            "tokenUrl": "https://localhost:9100/auth/login",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "read": " Grants read access",
                "write": " Grants write access"
            }
        }
    },
    "x-extension-openapi": {
        "example": "value on a json format"
    }
}